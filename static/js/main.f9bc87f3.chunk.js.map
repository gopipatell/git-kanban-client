{"version":3,"sources":["components/LoginButton.js","components/Home.js","ServerURL.js","ThemeUtil.js","components/Dashboard.js","components/AddTaskModal.js","components/KanbanList.js","components/KanbanBoard.js","components/Header.js","Routes.js","components/Layout.js","serviceWorker.js","index.js"],"names":["library","add","fab","authorizeUrl","clientId","scope","LoginButton","className","href","icon","Home","class","src","width","height","serverURL","path","theme","resetTheme","document","body","style","randomTheme","themes","Math","floor","random","length","SERVER_URL","Dashboard","state","repositories","axios","get","then","result","setState","data","Container","Row","this","map","repo","Col","lg","key","id","to","name","replace","description","Component","AddTaskModal","props","task","_handleInput","bind","field","event","target","value","Modal","show","onHide","handleClose","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","placeholder","onChange","e","rows","Footer","Button","variant","size","onClick","handleTaskSave","KanbanList","_handleModalClose","addTaskModalVisible","_handleShowModal","title","droppableId","status","provided","ref","innerRef","droppableProps","tasks","draggableId","index","task_index","providedDrag","Card","dragHandleProps","draggableProps","Text","color","Link","handleDelete","block","KanbanBoard","repository","_handleTaskSave","_handleDragEnd","_handleDelete","match","params","payload","repository_id","post","taskId","preventDefault","delete","filter","t","console","log","destination","task_id","new_index","new_status","onDragEnd","column","sort","a","b","user","_handleLogout","jwt","localStorage","getItem","decodeJwt","token","base64","split","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","JSON","parse","parseJwt","exp","Date","now","defaults","headers","common","removeItem","window","location","Navbar","Brand","Nav","Collapse","image","React","Routes","exact","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9bc87f3.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fab)\n\nconst authorizeUrl = 'https://github.com/login/oauth/authorize';\nconst clientId = '53b98d9a26167ec7ddb7';\nconst scope = '';\n\nfunction LoginButton() {\n  return (\n    <a className=\"btn btn-dark all-buttons\" href={`${authorizeUrl}?client_id=${clientId}&scope=${scope}`}>\n      <FontAwesomeIcon className=\"mr-2\" icon={['fab', 'github']} />\n      Login with Github\n    </a>\n  );\n}\n\nexport default LoginButton;\n","import React from 'react';\nimport LoginButton from './LoginButton';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nfunction Home() {\n  return (\n    <div >\n        <div class=\"position-relative overflow-hidden p-3 p-md-5 text-center homepage\">\n          <div class=\"col-md-5 p-lg-5 mx-auto my-5\">\n            <h1 class=\"display-4 font-weight-normal text-dark\">\n            <FontAwesomeIcon className=\"mr-3 text-dark\" icon={['fab', 'trello']} />\n              Git Kanban\n            </h1>\n            <p class=\"lead font-weight-normal\">When Open Source Meets Kanban 🧡</p>\n            <p class=\"text-capitalize\">\n            Manage your projects feature backlog efficiently. Sync repositories from Github and Start managing Kanban board with one click.</p>\n            <LoginButton/>\n          </div>\n          <div class=\"product-device shadow-sm d-none d-md-block\"></div>\n          <div class=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n          <div class=\"product-device shadow-sm d-none d-md-block\"></div>\n          <div class=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n        </div>\n\n            <div class=\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\">\n              <div class=\"bg-dark mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\">\n                <div class=\"my-3 py-3\">\n                  <h2 class=\"display-5\">Sync Github Projects</h2>\n                </div>\n                <div class=\"bg-light p-3 box-shadow mx-auto\">\n                  <img src=\"https://i.pinimg.com/originals/dc/ef/3a/dcef3abedf0e0761203aaeb85886a6f3.jpg\" width=\"200\" height=\"200\"/>\n                </div>\n              </div>\n              <div class=\"bg-light mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden\">\n                <div class=\"my-3 p-3\">\n                  <h2 class=\"display-5\">Track your backlog</h2>\n                </div>\n                <div class=\"bg-dark box-shadow mx-auto mb-4\">\n                <img src=\"https://cdn2.iconfinder.com/data/icons/online-gaming/512/online_gaming_progress-512.png\" height=\"250\" />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\">\n              <div class=\"bg-light mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden\">\n                <div class=\"my-3 p-3\">\n                  <h2 class=\"display-5\">Get things done</h2>\n                </div>\n                <div class=\"bg-dark box-shadow mx-auto p-4\">\n                  <img src=\"https://www.androidpolice.com/wp-content/cache/wp-appbox/a32f0c784daf6ebdee8d1d2aa88cf1b5/ai-ad558b8d3a18effc498879622379f140\" width=\"200\"/>\n                </div>\n              </div>\n              <div class=\"bg-secondary mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\">\n                <div class=\"my-3 py-3\">\n                  <h2 class=\"display-5\">Collaborate with team</h2>\n                </div>\n                <div class=\"bg-light box-shadow mx-auto p-4\">\n                  <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRZBb1olXBUg3ALXOQWESZrNT3OWbMujCX_-EnEkvSLm1BoQdMJiQ\" height=\"180\" />\n                </div>\n              </div>\n            </div>\n\n\n  </div>\n  );\n}\n\nexport default Home;\n","const serverURL = function (path) {\n  return \"http://localhost:3000/\" + path;\n  // return \"https://greenify-your-life.herokuapp.com/\" + path;\n};\n\nexport default serverURL;\n\n// import serverURL from \"../ServerURL\";\n// serverURL(path);\n","const theme = {\n  resetTheme: () => {\n    document.body.style = 'background-image: linear-gradient(to bottom right, #b5cbd4, #92b0bb)';\n  },\n  randomTheme: () => {\n    const themes = ['background-image: linear-gradient(to bottom right, #b5cbd4, #92b0bb)',\n    'background-image: linear-gradient(to bottom right, #a6e4e4, #a25192)',\n    'background-image: linear-gradient(to bottom right, #cab5ae, #7b9c8b)',\n    'background-image: linear-gradient(to bottom right, #a8f79e, #596494)'];\n\n\n    document.body.style = themes[Math.floor(Math.random() * themes.length)];\n\n  }\n}\n\nexport default theme;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { CardImg, CardDeck,CardSubtitle, CardBody,Container } from 'reactstrap';\nimport './Dashboard.css';\nimport serverURL from \"../ServerURL\";\nimport {Link} from 'react-router-dom';\nimport theme from '../ThemeUtil'\n\nconst SERVER_URL = serverURL('repositories');\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      repositories: []\n    };\n  };\n\n  componentDidMount() {\n    theme.resetTheme();\n\n    axios.get(SERVER_URL).then((result) => {\n      this.setState({repositories: result.data});\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n      <div>\n        <h3 className=\"mt-3 mb-4\">Repositories</h3>\n        <Row className=\"justify-content-md-center \">\n          {this.state.repositories.map(repo => {\n            return (\n\n            <Col lg=\"3\" key={repo.id}>\n            <div key={repo.id} >\n            <div className=\"dashboard text-center p-3 shadow rounded\">\n                <Link to={`/repositories/${repo.id}`}>\n                  <h5 className=\"text-capitalize\"> {repo.name.replace(/[-]/g,' ')}</h5>\n\n                </Link><br/>\n                <p>{repo.description}</p>\n                <Link to={`/repositories/${repo.id}`} className=\"btn btn-light btn-sm repository-button \">Kanban Board</Link>\n                </div>\n                <br/>\n            </div>\n            </Col>\n            )\n          })}\n        </Row>\n      </div>\n      </Container>\n    )\n  }\n}\n\nexport default Dashboard;\n","import React, { Component }  from 'react';\nimport { Card, Button, Modal, Form } from 'react-bootstrap';\n\n\nclass AddTaskModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { task: {} };\n    this._handleInput = this._handleInput.bind(this);\n  }\n\n  _handleInput(field, event) {\n    this.setState({\n      task: { ...this.state.task, [field]: event.target.value }\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={this.props.handleClose}\n        aria-labelledby=\"contained-modal-title-vcenter\"centered>\n          <Modal.Header closeButton>\n            <Modal.Title>New task</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <Form>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control as=\"input\" placeholder=\"title..\" onChange={ e => this._handleInput('title', e) }/>\n           </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"description..\" onChange={ e => this._handleInput('description', e) }/>\n           </Form.Group>\n          </Form>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"light\" size=\"sm\" onClick={this.props.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"dark\" size=\"sm\" onClick={() => { this.props.handleClose(); this.props.handleTaskSave(this.state.task);} }>\n              Add New Task\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default AddTaskModal;\n","import React, { Component }  from 'react';\nimport './KanbanBoard.css'\nimport { Card, Button } from 'react-bootstrap';\nimport AddTaskModal from './AddTaskModal';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nclass KanbanList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTaskModalVisible: false\n    }\n\n    this._handleModalClose =  this._handleModalClose.bind(this);\n    this._handleShowModal = this._handleShowModal.bind(this);\n\n  }\n\n  _handleModalClose = function() {\n    this.setState({ addTaskModalVisible: false});\n  }\n\n  _handleShowModal = function() {\n    this.setState({ addTaskModalVisible: true });\n  }\n\n  render() {\n    return (\n      <div className=\"list\">\n        <div className=\"text-center\">{this.props.title}</div>\n        <Droppable droppableId={this.props.status+\"\"}>\n        { provided => (\n          <div className=\"droppableList\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}>\n            {this.props.tasks.map(task => {\n              return(\n                <Draggable draggableId={task.id+\"\"} index={task.task_index} key={task.id}>\n                {providedDrag => (\n                  <Card className=\"mt-1 p-0 shadow-sm text-dark kanban-card\"\n                    key={task.id}\n                    ref={providedDrag.innerRef}\n                    {...providedDrag.dragHandleProps}\n                    {...providedDrag.draggableProps}>\n                    <Card.Body>\n                      <Card.Text className=\"mb-0 text-capitalize\" style={{color: 'black'}}>{task.title}</Card.Text>\n                      <Card.Text className=\"small\">\n                        {task.description}\n                      </Card.Text>\n                      <Card.Link className=\"small kanban-card-link text-secondary\" href=\"#\" onClick={e => this.props.handleDelete(task.id, e)}>Delete</Card.Link>\n                    </Card.Body>\n                  </Card>\n                )}\n                </Draggable>\n              )\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n        </Droppable>\n        <br/>\n        <Button className=\"addbutton\"\n          variant=\"light text-muted\"\n          size=\"sm\" block\n          onClick={this._handleShowModal}>\n          + Add new task\n        </Button>\n        <AddTaskModal\n          show={this.state.addTaskModalVisible}\n          handleClose={this._handleModalClose}\n          handleTaskSave={ this.props.handleTaskSave} />\n      </div>\n    )\n  }\n}\n\nexport default KanbanList;\n","import React, { Component }  from 'react';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\nimport './KanbanBoard.css'\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport KanbanList from './KanbanList.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './KanbanList.css'\nimport theme from '../ThemeUtil'\n\nclass KanbanBoard extends Component {\n  constructor() {\n    super();\n    this.state= {\n      repository : {name:\"\", tasks:[]}\n    };\n\n    this._handleTaskSave = this._handleTaskSave.bind(this);\n    this._handleDragEnd = this._handleDragEnd.bind(this);\n    this._handleDelete = this._handleDelete.bind(this);\n\n  }\n\n  componentDidMount() {\n\n    theme.randomTheme();\n\n    const {id} = this.props.match.params;\n\n    axios.get(serverURL(`repositories/${id}`)).then((result) => {\n\n      this.setState({repository: result.data.repository});\n    });\n  }\n\n  _handleTaskSave(task) {\n    const {id} = this.props.match.params;\n    const payload = { task: { ...task, repository_id: id }};\n\n    axios.post(serverURL(\"tasks\"), payload)\n      .then(result => {\n        this.setState({repository: { ...this.state.repository, tasks: [ ...this.state.repository.tasks, result.data ] }})\n      });\n  }\n\n\n  _handleDelete(taskId, e) {\n    e.preventDefault();\n\n    axios.delete(serverURL(`tasks/${taskId}`))\n      .then(result => {\n        const tasks = this.state.repository.tasks.filter(t => t.id !== taskId)\n        this.setState({repository: { ...this.state.repository, tasks: [ ...tasks ] }})\n      });\n\n  }\n\n\n  _handleDragEnd(result) {\n    console.log(result);\n\n    if(!result.destination) return;\n    console.log('nexttttt');\n    const {id} = this.props.match.params;\n\n    const payload = {\n      task_id: result.draggableId,\n      new_index: result.destination.index,\n      new_status: result.destination.droppableId\n    };\n\n    axios.post(serverURL(`repositories/${id}/update-task-index`), payload)\n    .then(result =>\n      axios.get(serverURL(`repositories/${id}`)).then((result) => {\n        this.setState({repository: result.data.repository});\n      }));\n\n  }\n\n  render() {\n\n    const columns = [\"Backlog\", \"Ready to start\", \"In progress\", \"Review\", \"Done\"];\n\n    return (\n      <div className=\"container-fluid mt-2 kanban-board\">\n      <Row>\n      <Col>\n        <h4 className=\"text-capitalize\"> {this.state.repository.name.replace(/[-]/g,' ')}</h4>\n      </Col>\n      <Col className=\"text-right\">\n\n      </Col>\n      </Row>\n\n      <p>{this.state.repository.description}</p>\n      <Row>\n      <DragDropContext onDragEnd={this._handleDragEnd}>\n        { columns.map( (column, index) => {\n            const status = \"\"+(index+1);\n            return (\n              <Col className=\"p-0\" key={status}>\n                <KanbanList\n                  title={column}\n                  tasks={this.state.repository.tasks.filter(t => t.status === status).sort((a,b)=>a.task_index-b.task_index)}\n                  handleDelete={ this._handleDelete }\n                  handleTaskSave={ task => this._handleTaskSave({...task, status: status}) }\n                  status={status}/>\n              </Col>\n            )\n        })}\n      </DragDropContext>\n      </Row>\n      </div>\n    )\n  }\n}\n\nexport default KanbanBoard;\n","import React from 'react'\nimport { Nav } from 'react-bootstrap';\nimport { Navbar, NavDropdown } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport LoginButton from './LoginButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './Layout.css'\n\nimport axios from 'axios';\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}\n    }\n\n    this._handleLogout = this._handleLogout.bind(this)\n  }\n\n  componentDidMount() {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    const parseJwt = function(token) {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n        console.log('json', JSON.parse(jsonPayload));\n\n        return JSON.parse(jsonPayload);\n    };\n\n    if(!jwt) return;\n\n    const decodeJwt = parseJwt(jwt);\n\n    if(decodeJwt.exp <= Date.now()/1000) return;\n\n    this.setState({\n      user: { ...decodeJwt }\n    })\n\n    console.log(\"setting default jwt bearer\", `Bearer ${jwt}`);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`;\n\n  }\n\n  _handleLogout(e) {\n    e.preventDefault();\n    localStorage.removeItem(\"jwt\");\n    axios.defaults.headers.common['Authorization'] = null;\n    window.location.href = \"/\";\n  }\n\n  render() {\n    return(\n        <header>\n          <Navbar className=\"navbar-color\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">\n            <FontAwesomeIcon className=\"mr-2\" icon={['fab', 'trello']} />\n              Git Kanban\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            {this.state.user.name ?\n\n              <Nav.Link href=\"#/dashboard\">Dashboard</Nav.Link>\n              \n                : ''}\n            </Nav>\n            <Navbar.Collapse className=\"justify-content-end\">\n                  {this.state.user.name ?\n                    <Nav>\n                      <Navbar.Text className=\"mr-2\">\n                        <img src={this.state.user.image} width=\"30\" height=\"30\" className=\"rounded-circle mr-2\"/>\n                        {this.state.user.name}\n                      </Navbar.Text>\n                      <Nav.Link href=\"#\" onClick={ this._handleLogout }>Logout</Nav.Link>\n                      </Nav>\n                      :\n                      <Nav>\n                      <Navbar.Text className=\"mr-2\">\n                        <LoginButton />\n                      </Navbar.Text>\n                      </Nav>\n\n                  }\n            </Navbar.Collapse>\n        </Navbar>\n      </header>\n    )\n  }\n\n}\n\nexport default Header;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './components/Layout.css';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport KanbanBoard from './components/KanbanBoard';\nimport Header from './components/Header';\n\nconst Routes = (\n  <Router>\n      <>\n        <Header/>\n        <main className=\"main-content\">\n\n            <Switch>\n              <Route exact path=\"/\" component= { Home }/>\n              <Route exact path=\"/dashboard\" component= { Dashboard }/>\n              <Route path=\"/repositories/:id\" component={ KanbanBoard } />\n            </Switch>\n\n        </main>\n      </>\n  </Router>\n)\n\nexport default Routes;\n","import React, { Component }  from 'react';\nimport KanbanBoard from './KanbanBoard';\nimport './Layout.css'\nimport { Nav } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nclass Layout extends Component {\n  render () {\n    return (\n      <React.Fragment>\n\n        <header>\n          <Navbar className=\"navebar\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Git Kanban</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#features\">Kanban Board</Nav.Link>\n              <Nav.Link href=\"#pricing\">coming soon</Nav.Link>\n            </Nav>\n        </Navbar>\n      </header>\n\n      <main className=\"main-content\">\n        This is main content\n        <KanbanBoard />\n      </main>\n\n      <footer className=\"text-muted\">\n        Copyright &copy; Git Kanban\n      </footer>\n    </React.Fragment>\n    );\n  }\n}\n\n  export default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}